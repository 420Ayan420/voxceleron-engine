#version 450

layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

struct Voxel {
    uint color;
    uint material_flags; // material in lower byte, flags in upper byte
};

layout(std430, binding = 0) buffer VoxelData {
    Voxel voxels[];
};

layout(push_constant) uniform PushConstants {
    ivec3 chunkPosition;
    uint chunkSize;
} pushConstants;

void main() {
    // Get global voxel position
    ivec3 pos = ivec3(gl_GlobalInvocationID.xyz);
    uint index = pos.x + 
                 pos.y * pushConstants.chunkSize + 
                 pos.z * pushConstants.chunkSize * pushConstants.chunkSize;
    
    // Process voxel data
    // This is where we'll implement various voxel operations
    // like meshing, culling invisible faces, etc.
} 